{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"title\", \"isActive\", \"type\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { Text, Button, useTheme } from 'native-base';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function Filter(_ref) {\n  var title = _ref.title,\n      _ref$isActive = _ref.isActive,\n      isActive = _ref$isActive === void 0 ? false : _ref$isActive,\n      type = _ref.type,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var colorType = type === 'open' ? colors.secondary[700] : colors.green[300];\n  return _jsx(Button, _objectSpread(_objectSpread({\n    variant: \"outline\",\n    borderWidth: isActive ? 1 : 0,\n    borderColor: colorType,\n    bgColor: \"gray.600\",\n    flex: 1,\n    size: \"sm\"\n  }, rest), {}, {\n    children: _jsx(Text, {\n      color: isActive ? colorType : \"gray.300\",\n      fontSize: \"xs\",\n      textTransform: \"uppercase\",\n      children: title\n    })\n  }));\n}","map":{"version":3,"names":["Text","Button","useTheme","Filter","title","isActive","type","rest","colors","colorType","secondary","green"],"sources":["/home/eci/Documents/Project/Ignite_lab_react_native/Ignite-lab-react-native/rockethelp/src/components/Filter.tsx"],"sourcesContent":["import { Text, Button, IButtonProps, useTheme } from 'native-base';\n\ntype Props = IButtonProps & {\n  title: String;\n  isActive?: boolean;\n  type: 'open' |  'closed';\n}\n\nexport function Filter({ title, isActive = false, type, ...rest }: Props ) {\n  const { colors } = useTheme();\n\n  const colorType = type === 'open' ? colors.secondary[700] : colors.green[300];\n  return (\n    <Button\n      variant=\"outline\"\n      borderWidth={isActive ? 1 : 0}\n      borderColor={colorType}\n      bgColor=\"gray.600\"\n      flex={1}\n      size=\"sm\"\n      {...rest}\n    >\n      <Text color={isActive ? colorType : \"gray.300\"} fontSize=\"xs\" textTransform=\"uppercase\">\n        {title}\n      </Text>\n    </Button>\n  );\n}"],"mappings":";;;;;;;;AAAA,SAASA,IAAT,EAAeC,MAAf,EAAqCC,QAArC,QAAqD,aAArD;;AAQA,OAAO,SAASC,MAAT,OAAoE;EAAA,IAAlDC,KAAkD,QAAlDA,KAAkD;EAAA,yBAA3CC,QAA2C;EAAA,IAA3CA,QAA2C,8BAAhC,KAAgC;EAAA,IAAzBC,IAAyB,QAAzBA,IAAyB;EAAA,IAAhBC,IAAgB;;EACzE,gBAAmBL,QAAQ,EAA3B;EAAA,IAAQM,MAAR,aAAQA,MAAR;;EAEA,IAAMC,SAAS,GAAGH,IAAI,KAAK,MAAT,GAAkBE,MAAM,CAACE,SAAP,CAAiB,GAAjB,CAAlB,GAA0CF,MAAM,CAACG,KAAP,CAAa,GAAb,CAA5D;EACA,OACE,KAAC,MAAD;IACE,OAAO,EAAC,SADV;IAEE,WAAW,EAAEN,QAAQ,GAAG,CAAH,GAAO,CAF9B;IAGE,WAAW,EAAEI,SAHf;IAIE,OAAO,EAAC,UAJV;IAKE,IAAI,EAAE,CALR;IAME,IAAI,EAAC;EANP,GAOMF,IAPN;IAAA,UASE,KAAC,IAAD;MAAM,KAAK,EAAEF,QAAQ,GAAGI,SAAH,GAAe,UAApC;MAAgD,QAAQ,EAAC,IAAzD;MAA8D,aAAa,EAAC,WAA5E;MAAA,UACGL;IADH;EATF,GADF;AAeD"},"metadata":{},"sourceType":"module"}